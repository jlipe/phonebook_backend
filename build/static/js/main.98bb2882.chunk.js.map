{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/person.js","components/App.js","index.js"],"names":["Filter","props","onChange","handleFilterChange","value","filter","PersonForm","handleNameChange","handleNumberChange","type","onClick","addPerson","Persons","persons","person","name","toLowerCase","includes","map","number","id","buttonDelete","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","errorMessage","setErrorMessage","setMessage","useEffect","personService","result","event","target","preventDefault","v","window","confirm","find","p","updatedPerson","setTimeout","catch","err","updatePerson","newPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98bb2882.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = (props) => {\n  return(\n    <div>\n      filter shown with <input onChange={props.handleFilterChange} value={props.filter} />\n    </div>\n  );\n}\n\nexport default Filter;","import React from 'react';\n\nconst PersonForm = (props) => {\n  return(\n    <>\n      <div>\n        name: <input onChange={props.handleNameChange}/>\n      </div>\n      <div>\n        number: <input onChange={props.handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\" onClick={props.addPerson}>add</button>\n      </div>\n  </>\n  )\n}\n\nexport default PersonForm;","import React from 'react';\n\nconst Persons = (props) => {\n  const people = props.filter\n  ? props.persons.filter(person => person.name.toLowerCase().includes(props.filter.toLowerCase()))\n  : props.persons\n  return(\n    people.map((person) => {\n      return(\n        <div key={person.id}>\n          {person.name} {person.number}\n          <button value={person.id} name={person.name} onClick={props.buttonDelete}>Delete</button>\n        </div>\n      );\n    })\n  );\n}\n\nexport default Persons;","import React from 'react'\n\nconst Notification = ({ message, className }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className={className}>\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import axios from 'axios';\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id, name) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react';\nimport Filter from './Filter';\nimport PersonForm from './PersonForm';\nimport Persons from './Persons';\nimport Notification from './Notification'\n\nimport personService from '../services/person'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]); \n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ filter, setFilter ] = useState('');\n  const [ errorMessage, setErrorMessage ] = useState(null)\n  const [ message, setMessage ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(result => {\n        setPersons(result);\n      });\n  }, []);\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const updatePerson = id => {\n    const person = persons.find(p => p.id === id)\n    const updatedPerson = { ...person, number: newNumber }\n    personService\n      .update(updatedPerson.id, updatedPerson)\n      .then(response => {\n        setPersons(persons.map(p => p.id !== response.id ? p : updatedPerson))\n        setMessage(\n          `Person '${updatedPerson.name}' was updated`\n        )\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)})\n      .catch(err => {\n        setErrorMessage(\n          `Person '${updatedPerson.name}' was already deleted`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)})\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    if (persons.map(v => v.name).includes(newName)){\n      const response = window.confirm(`${newName} is already in the phone book, replace old number?`)\n      if (!response) {\n        return\n      } else {\n        updatePerson(persons.find(p => p.name === newName).id)\n        return\n      }\n    } else {\n      const newPerson = { name: newName, number: newNumber}\n      personService\n        .create(newPerson)\n        .then(response => {\n          setPersons(persons.concat(response))\n      })\n      setMessage(\n        `Person '${newPerson.name}' was added`\n      )\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  const deletePerson = (event) => {\n    event.preventDefault()\n    const id = event.target.value\n    const name = event.target.name\n    const response = window.confirm(`Delete user ${name}?`)\n    if (!response) {\n      return\n    }\n    personService\n      .remove(event.target.value, event.target.name)\n    setPersons(persons.filter(p => p.id !== +id))\n    setMessage(\n      `Person '${name}' was removed`\n    )\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      {errorMessage ? <Notification message={errorMessage} className={\"error\"} /> : null}\n      {message ? <Notification message={message} className={\"success\"} /> : null}\n\n      <Filter handleFilterChange={handleFilterChange} filter={filter} />\n\n      <h2>Add a New</h2>\n\n      <PersonForm\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        addPerson={addPerson}\n      />\n\n      <h2>Numbers</h2>\n\n      {persons \n      ? <Persons persons={persons} filter={filter} buttonDelete={deletePerson}></Persons>\n      : null}\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}